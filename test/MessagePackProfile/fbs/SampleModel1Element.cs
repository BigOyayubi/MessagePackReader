// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace MessagePackProfile.flatbuffers
{

using global::System;
using global::FlatBuffers;

public struct SampleModel1Element : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static SampleModel1Element GetRootAsSampleModel1Element(ByteBuffer _bb) { return GetRootAsSampleModel1Element(_bb, new SampleModel1Element()); }
  public static SampleModel1Element GetRootAsSampleModel1Element(ByteBuffer _bb, SampleModel1Element obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public SampleModel1Element __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Key { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetKeyBytes() { return __p.__vector_as_span(4); }
#else
  public ArraySegment<byte>? GetKeyBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetKeyArray() { return __p.__vector_as_array<byte>(4); }
  public int IntValue { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public float FloatValue { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public double DoubleValue { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }

  public static Offset<SampleModel1Element> CreateSampleModel1Element(FlatBufferBuilder builder,
      StringOffset KeyOffset = default(StringOffset),
      int IntValue = 0,
      float FloatValue = 0.0f,
      double DoubleValue = 0.0) {
    builder.StartObject(4);
    SampleModel1Element.AddDoubleValue(builder, DoubleValue);
    SampleModel1Element.AddFloatValue(builder, FloatValue);
    SampleModel1Element.AddIntValue(builder, IntValue);
    SampleModel1Element.AddKey(builder, KeyOffset);
    return SampleModel1Element.EndSampleModel1Element(builder);
  }

  public static void StartSampleModel1Element(FlatBufferBuilder builder) { builder.StartObject(4); }
  public static void AddKey(FlatBufferBuilder builder, StringOffset KeyOffset) { builder.AddOffset(0, KeyOffset.Value, 0); }
  public static void AddIntValue(FlatBufferBuilder builder, int IntValue) { builder.AddInt(1, IntValue, 0); }
  public static void AddFloatValue(FlatBufferBuilder builder, float FloatValue) { builder.AddFloat(2, FloatValue, 0.0f); }
  public static void AddDoubleValue(FlatBufferBuilder builder, double DoubleValue) { builder.AddDouble(3, DoubleValue, 0.0); }
  public static Offset<SampleModel1Element> EndSampleModel1Element(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<SampleModel1Element>(o);
  }
};


}
